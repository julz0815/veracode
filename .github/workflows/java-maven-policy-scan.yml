name: Veracode Static Code Analysis

run-name: ${{ github.event.client_payload.repository.name }}

on:
  repository_dispatch:
    types: [java-maven-policy-scan]

# env:
#   workflow_name: 'my-workflow'
env:
  workflow_name: 'java-maven-build'

jobs:
  register:
    runs-on: ubuntu-latest
    outputs:
      waspreview: ${{ github.event.action }}
    steps:
    - uses: vincent-deng/veracode-github-app@aws-ecs-dynamodb
      with:
        callback_url: ${{ github.event.client_payload.callback_url }}
        sha: ${{ github.event.client_payload.sha }}
        run_id: ${{ github.run_id }}
        repository_owner: ${{ github.event.client_payload.repository.owner }}
        repository_name: ${{ github.event.client_payload.repository.name }}
        name: "Central markdown check"
        enforce: true
        
  build:
    needs: register
#     if: needs.register.waspreview == 'java-maven-policy-scan1'
#     uses: ./.github/workflows/${{needs.register.waspreview}}.yml
    uses: ./.github/workflows/${{ env.workflow_name }}.yml@main
    with:
      repository: ${{ github.event.client_payload.repository.full_name }}
      ref: ${{ github.event.client_payload.sha }}
      token: ${{ github.event.client_payload.token }}
#     if: needs.register.waspreview == 'java-maven-policy-scan1'
#     uses: ./.github/workflows/java-maven-build.yml
#     with:
#       repository: ${{ github.event.client_payload.repository.full_name }}
#       ref: ${{ github.event.client_payload.sha }}
#       token: ${{ github.event.client_payload.token }}
    
#     runs-on: ubuntu-latest
#     steps:
# #       - uses: actions/checkout@v3
#       - name: Build Artifact
#         uses: ${{ github.event.client_payload.repository.owner }}/veracode/.github/actions/java-maven
#         with:
#           repository: ${{ github.event.client_payload.repository.full_name }}
#           ref: ${{ github.event.client_payload.sha }}
#           token: ${{ github.event.client_payload.token }}

  pipeline_scan:
    # needs the build step before this job will start running
    needs: build
    runs-on: ubuntu-latest
    name: pipeline scan

    steps:
      - name: checkout repo
        uses: actions/checkout@v3
      
      # get the compiled binary from a previous job
      - name: get archive
        uses: actions/download-artifact@v3
        with:
          name: veracode-artifact

      # run the pipeline scan action
      - name: Veracode Pipeline-Scan
        id: pipeline-scan
        uses: veracode/Veracode-pipeline-scan-action@pipeline-scan-beta-v0.0.4
        with:
          vid: ${{ secrets.API_ID }}
          vkey: ${{ secrets.API_KEY }}
          file: "verademo.war" 
          fail_build: true
